name: test

on:
  push:
    branches:
      - master
  pull_request:

defaults:
  run:
    shell: bash -xe {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - "2.7"
          - "3.0"
          - "3.1"
          - "3.2"
          - "3.3"
          - "3.4"
        gemfile:
          - gemfiles/faraday_2.0.gemfile
          - gemfiles/faraday_2.1.gemfile
          - gemfiles/faraday_2.2.gemfile
          - gemfiles/faraday_2.3.gemfile
          - gemfiles/faraday_2.4.gemfile
          - gemfiles/faraday_2.5.gemfile
          - gemfiles/faraday_2.6.gemfile
          - gemfiles/faraday_2.7.gemfile
          - gemfiles/faraday_2.8.gemfile
          - gemfiles/faraday_2.9.gemfile
          - gemfiles/faraday_2.10.gemfile
          - gemfiles/faraday_2.11.gemfile
          - gemfiles/faraday_2.12.gemfile
          - gemfiles/faraday_2.13.gemfile
        exclude:
          - ruby: "2.7"
            gemfile: gemfiles/faraday_2.9.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/faraday_2.10.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/faraday_2.11.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/faraday_2.12.gemfile
          - ruby: "2.7"
            gemfile: gemfiles/faraday_2.13.gemfile
    env:
      BUNDLE_GEMFILE: ${{ matrix.gemfile }}
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true
      - name: Setup dependencies
        run: bundle install
      - name: Run tests
        run: bundle exec rake
  finish:
    needs: test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check test conclusion
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs \
          | jq -e '.jobs | map(select(.name | test("^test ")).conclusion) | any(. == "failure") | not'
